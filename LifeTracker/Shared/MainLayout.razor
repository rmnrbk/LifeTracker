@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<div class="bb-page">
    <Sidebar @ref="sidebar"
             IconName="IconName.None"
             Title="Time Tracker"
             DataProvider="SidebarDataProvider"/>

    <main>
        <div class="bb-top-row px-4 d-flex justify-content-end">
            <span>&nbsp</span>
        </div>

        <article class="content px-4">
            <div class="py-2">
                @Body
            </div>
        </article>
    </main>

</div>

<PageTitle>Life Tracker</PageTitle>

@code{ 
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    
    private Sidebar sidebar = default!;
    private IEnumerable<NavItem> navItems = default!;

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "/", IconName = IconName.HouseDoorFill, Text = "Тэги", Match=NavLinkMatch.All },
            new NavItem { Id = "2", Href = "/history", IconName = IconName.List, Text = "История" },
            new NavItem { Id = "3", Href = "/report", IconName = IconName.PieChart, Text = "Отчет" },
        };

        return navItems;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var user = (await AuthStat).User;
        if(!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo($"identity/account/login?returnUrl={Uri.EscapeDataString(NavigationManager.Uri)}");
        }
    }
}